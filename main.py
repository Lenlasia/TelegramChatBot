import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from openai import OpenAI

client = OpenAI(api_key="")
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage

storage = MemoryStorage()

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –±–æ—Ç–∞
dp = Dispatcher(bot, storage=storage)
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

open_tickets = []
supports = [1624709653, 1062104473]

engine = "gpt-3.5-turbo"

keyboard = ReplyKeyboardMarkup().add(KeyboardButton(text="–û –∫–æ–º–ø–∞–Ω–∏–∏ üè¢")).add(
    KeyboardButton(text="–ö–æ–º–∞–Ω–¥–∞üë®‚Äçüë¶‚Äçüë¶")).add(KeyboardButton(text="–°—Ç–æ–∏–º–æ—Å—Ç—å üíµ")).add(
    KeyboardButton(text="–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ üíº")).add(KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º üë©‚Äçüíº")).add(
    KeyboardButton(text='–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû')).add(KeyboardButton(text='–û–±—Ä–∞—Ç–∏—Ç—Å—è –∫ ChatGPT'))

portfolio = InlineKeyboardMarkup().add()

adminkeyboard = ReplyKeyboardMarkup().add(KeyboardButton(text='–¢–µ–∫—Å—Ç "–û –∫–æ–º–ø–∞–Ω–∏–∏"')).add(
    KeyboardButton(text='–¢–µ–∫—Å—Ç "–ö–æ–º–∞–Ω–¥–∞"')).add(KeyboardButton(text='–¢–µ–∫—Å—Ç "–°—Ç–æ–∏–º–æ—Å—Ç—å"')).add(
    KeyboardButton(text='–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞'))


class FormObratSvyaz(StatesGroup):
    sposob = State()
    name = State()
    vremya = State()


class FormGPT(StatesGroup):
    zapros = State()


@dp.message_handler(commands="start")
async def cmd_test1(message: types.Message):
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ .\n\n–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º "
                         "–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é —Å–Ω–∏–∑—É.", reply_markup=keyboard)


@dp.message_handler(state=FormObratSvyaz.sposob)
async def enter_volume(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        await message.answer('–§–æ—Ä–º–∞ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞!', reply_markup=keyboard)
        await state.finish()
        return
    await state.update_data(answer1=answer)
    await message.answer('–ö–∞–∫ –∫ –í–∞–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—Å—è?')
    await FormObratSvyaz.name.set()


@dp.message_handler(state=FormObratSvyaz.name)
async def enter_volume(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        await message.answer('–§–æ—Ä–º–∞ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞!', reply_markup=keyboard)
        await state.finish()
        return
    await state.update_data(answer2=answer)
    await message.answer('–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –º–æ–∂–Ω–æ —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?')
    await FormObratSvyaz.vremya.set()


@dp.message_handler(state=FormObratSvyaz.vremya)
async def enter_volume(message: types.Message, state: FSMContext):
    answer = message.text
    await state.update_data(answer3=answer)
    await message.answer('–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å.', reply_markup=keyboard)
    sposob = (await state.get_data())['answer1']
    name = (await state.get_data())['answer2']
    await bot.send_message(-1001722492789,
                           f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.\n–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏ - {sposob}\n–ò–º—è - {name}.\n–ñ–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è - {answer}')
    await state.finish()


@dp.message_handler(state=FormGPT)
async def enter_volume(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å ChatGPT':
        await message.answer('–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.', reply_markup=keyboard)
        await state.finish()
        return
    completion = client.chat.completions.create(model="gpt-3.5-turbo",
    messages=[{"role": "user", "content": answer}])
    await message.answer(completion.choices[0].message.content)
    await FormGPT.zapros.set()



@dp.message_handler()
async def cmd_test1(message: types.Message):
    if message.chat.id == -1001722492789:
        if '/close_ticket' in message.text:
            mess = message.text.replace('/close_ticket ', '')
            if int(mess) in open_tickets:
                del open_tickets[open_tickets.index(int(mess))]
                await message.answer(f'–¢–∏–∫–µ—Ç {mess} –±—ã–ª –∑–∞–∫—Ä—ã—Ç')
                await bot.send_message(int(mess), f'–í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç!', reply_markup=keyboard)
            else:
                await message.answer('–¢–∏–∫–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
        elif '/answer' in message.text:
            mess = message.text.replace('/answer ', '').split(" ", 1)
            if int(mess[0]) in open_tickets:
                await bot.send_message(int(mess[0]), mess[1])
            else:
                await message.answer('–¢–∏–∫–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
        elif '/admin' in message.text:
            await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.\n\n–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?')
    else:
        if message.text == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå' and message.chat.id in open_tickets:
            del open_tickets[open_tickets.index(message.chat.id)]
            await message.answer('–í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç!', reply_markup=keyboard)
            await bot.send_message(-1001722492789, f'–¢–∏–∫–µ—Ç {message.chat.id} –±—ã–ª –∑–∞–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!')
        elif message.chat.id in open_tickets:
            await bot.send_message(-1001722492789, f"Ticket - {message.chat.id}\n\n{message.text}")
        elif message.text == '–û –∫–æ–º–ø–∞–Ω–∏–∏ üè¢':
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer('')
        elif message.text == '–ö–æ–º–∞–Ω–¥–∞üë®‚Äçüë¶‚Äçüë¶':
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer('')
        elif message.text == '–°—Ç–æ–∏–º–æ—Å—Ç—å üíµ':
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer(
                '–¶–µ–Ω–∞ –Ω–∞ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.'
                '\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤ - –æ—Ç 50.000‚ÇΩ\n\nSEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è - –æ—Ç 50.000‚ÇΩ\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–∞ - –æ—Ç '
                '10.000‚ÇΩ\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ '
                '–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –¥–æ–ø–æ–ª–Ω–µ–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - –æ—Ç 100.000‚ÇΩ\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è '
                '–≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - –æ—Ç 100.000‚ÇΩ\n\n–ü—Ä–∏–∫–ª–∞–¥–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –∏ –∏—Ö '
                '–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π - –æ—Ç 300.000‚ÇΩ')
        elif message.text == '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ üíº':
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer('–°–Ω–∏–∑—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–∞—à–∏ –∫—Ä—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã.\n–û—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –≤ –Ω–∞—à–µ–π '
                                 '–≥—Ä—É–ø–ø–µ –í–ö.', reply_markup=portfolio)
        elif message.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º üë©‚Äçüíº':
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer(
                '–ú–µ–Ω–µ–¥–∂–µ—Ä, –æ—Å–≤–æ–±–æ–¥–∏–≤—à–∏–π—Å—è –≤ –±–ª–∏–∑–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.',
                reply_markup=ReplyKeyboardMarkup().add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå'))
            open_tickets.append(message.chat.id)
            await bot.send_message(-1001722492789,
                                   f'–û—Ç–∫—Ä—ã—Ç –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç!\n\n–ù–æ–º–µ—Ä: {message.chat.id}\n\n–î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ:\n/close_ticket {message.chat.id}\n–î–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - /answer {message.chat.id}')
        elif message.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû':
            if 'group' in message.chat.type:


                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer('–£–∫–∞–∂–∏—Ç–µ —Å–ø–æ—Å–æ–±, –∫–∞–∫ —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è (–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, ID Telegram –∏ —Ç.–¥.).',
                                 reply_markup=ReplyKeyboardMarkup().add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå'))
            await FormObratSvyaz.sposob.set()
        elif message.text == '–û–±—Ä–∞—Ç–∏—Ç—Å—è –∫ ChatGPT':
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥. @AlViRityGPT_bot')
                return
            await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∫ ChatGPT',
                                 reply_markup=ReplyKeyboardMarkup().add('–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å ChatGPT'))
            await FormGPT.zapros.set()
        else:
            if message.chat.type == 'private':
                prompt = f'–ü—Ä–µ–¥—Å—Ç–∞–≤—å, —á—Ç–æ —Ç—ã —á–∞—Ç-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ WEB-—Å–∞–π—Ç–æ–≤, –±–æ—Ç–æ–≤, AR/VR –∏ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∞ —Ç–∞–∫–∂–µ ' \
                         f'–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π! ' \
                         f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å' \
                         f'–∞–ª —Ç–µ–±–µ: {message.text}, –æ—Ç–≤–µ—Ç—å –µ–º—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.'
                completion = client.chat.completions.create(model="gpt-3.5-turbo",
                messages=[{"role": "user", "content": prompt}])
                await message.answer('–û—Ç–≤–µ—Ç –ù–µ–π—Ä–æ—Å–µ—Ç–∏:')
                await message.answer(completion.choices[0].message.content)
                await message.answer('–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.',
                                     reply_markup=keyboard)


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    executor.start_polling(dp, skip_updates=True)
