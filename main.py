import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton
from openai import OpenAI
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import requests

from data import db_session
from data.users import User
from data.requests import Request

client = OpenAI(api_key="sk-proj-6VyJt1wmqrg7Va7WprONT3BlbkFJqz9kJAx3SJqSzYRsOlf8")

storage = MemoryStorage()

# –û–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token="6736833089:AAGhH-jqeNuev9kB-MZzlkB7q2wMi5E-Q2Q")
# –î–∏—Å–ø–µ—Ç—á–µ—Ä –¥–ª—è –±–æ—Ç–∞
dp = Dispatcher(bot, storage=storage)
# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
logging.basicConfig(level=logging.INFO)

open_tickets = []
supports = [1624709653, 1062104473]

engine = "gpt-3.5-turbo"

keyboard = ReplyKeyboardMarkup().add(KeyboardButton(text="–û –∫–æ–º–ø–∞–Ω–∏–∏ üè¢")).add(
    KeyboardButton(text="–ö–æ–º–∞–Ω–¥–∞üë®‚Äçüë¶‚Äçüë¶")).add(KeyboardButton(text="–°—Ç–æ–∏–º–æ—Å—Ç—å üíµ")).add(
    KeyboardButton(text="–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ üíº")).add(KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º üë©‚Äçüíº")).add(
    KeyboardButton(text='–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû')).add(KeyboardButton(text='–û–±—Ä–∞—Ç–∏—Ç—Å—è –∫ ChatGPT'))

portfolio = InlineKeyboardMarkup().add()

adminkeyboard = ReplyKeyboardMarkup().add(KeyboardButton(text='–¢–µ–∫—Å—Ç "–û –∫–æ–º–ø–∞–Ω–∏–∏"')).add(
    KeyboardButton(text='–¢–µ–∫—Å—Ç "–ö–æ–º–∞–Ω–¥–∞"')).add(KeyboardButton(text='–¢–µ–∫—Å—Ç "–°—Ç–æ–∏–º–æ—Å—Ç—å"')).add(
    KeyboardButton(text='–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ –±–æ—Ç–∞'))


class FormObratSvyaz(StatesGroup):
    sposob = State()
    name = State()
    vremya = State()


class FormGPT(StatesGroup):
    zapros = State()


def get_map():
    geocoder_api_server = "http://geocode-maps.yandex.ru/1.x/"

    geocoder_params = {
        "apikey": "40d1649f-0493-4b70-98ba-98533de7710b",
        "geocode": "–¢–æ–ª—å—è—Ç—Ç–∏, –Æ–∂–Ω–æ–µ –®–æ—Å—Å–µ, 163",
        "format": "json"}

    response = requests.get(geocoder_api_server, params=geocoder_params)

    if not response:
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ—á–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏
        pass

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ json-–æ–±—ä–µ–∫—Ç
    json_response = response.json()
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π —Ç–æ–ø–æ–Ω–∏–º –∏–∑ –æ—Ç–≤–µ—Ç–∞ –≥–µ–æ–∫–æ–¥–µ—Ä–∞.
    toponym = json_response["response"]["GeoObjectCollection"][
        "featureMember"][0]["GeoObject"]
    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–Ω—Ç—Ä–∞ —Ç–æ–ø–æ–Ω–∏–º–∞:
    toponym_coodrinates = toponym["Point"]["pos"]
    # –î–æ–ª–≥–æ—Ç–∞ –∏ —à–∏—Ä–æ—Ç–∞:
    toponym_longitude, toponym_lattitude = toponym_coodrinates.split(" ")

    delta = "0.005"

    # –°–æ–±–∏—Ä–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ StaticMapsAPI:
    map_params = {
        "ll": ",".join([toponym_longitude, toponym_lattitude]),
        "spn": ",".join([delta, delta]),
        "l": "map"
    }

    map_api_server = "http://static-maps.yandex.ru/1.x/"
    # ... –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
    response = requests.get(map_api_server, params=map_params)
    return response.url


@dp.message_handler(commands="start")
async def cmd_test1(message: types.Message):
    db_sess = db_session.create_session()
    if not(db_sess.query(User.tg_id).filter(User.tg_id == message.from_user.id)):
        user = User()
        user.tg_id = message.from_user.id
        user.count_of_used_b = 0
        user.count_of_r = 0
        db_sess.add(user)
    db_sess.commit()
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ ChatBotsManagers.\n\n–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º "
                         "–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é —Å–Ω–∏–∑—É. –¢–∞–∫–∂–µ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –≤–æ–∑–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help", reply_markup=keyboard)


@dp.message_handler(commands="help")
async def cmd_test1(message: types.Message):
    await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ ChatBotsManagers.\n\n–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º "
                         "–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é —Å–Ω–∏–∑—É. –ù–∞—à —á–∞—Ç-–±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–±"
                         "—É—Å–ª—É–≥–∞—Ö –∫–æ–º–ø–∞–Ω–∏–∏, –µ—ë –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –∏ –∫–æ–º–∞–Ω–¥–µ, –∞ —Ç–∞–∫–∂–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å"
                         "–Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏!\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!", reply_markup=keyboard)


@dp.message_handler(state=FormObratSvyaz.sposob)
async def enter_volume(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        await message.answer('–§–æ—Ä–º–∞ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞!', reply_markup=keyboard)
        await state.finish()
        return
    await state.update_data(answer1=answer)
    await message.answer('–ö–∞–∫ –∫ –í–∞–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—Å—è?')
    await FormObratSvyaz.name.set()


@dp.message_handler(state=FormObratSvyaz.name)
async def enter_volume(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå':
        await message.answer('–§–æ—Ä–º–∞ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞!', reply_markup=keyboard)
        await state.finish()
        return
    await state.update_data(answer2=answer)
    await message.answer('–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –º–æ–∂–Ω–æ —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è?')
    await FormObratSvyaz.vremya.set()


@dp.message_handler(state=FormObratSvyaz.vremya)
async def enter_volume(message: types.Message, state: FSMContext):
    answer = message.text
    await state.update_data(answer3=answer)
    await message.answer('–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–≤—è–∂–µ–º—Å—è —Å –í–∞–º–∏! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—è–≤–ª–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å.', reply_markup=keyboard)
    sposob = (await state.get_data())['answer1']
    name = (await state.get_data())['answer2']
    await bot.send_message(-1001722492789,
                           f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å.\n–°–ø–æ—Å–æ–± —Å–≤—è–∑–∏ - {sposob}\n–ò–º—è - {name}.\n–ñ–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è - {answer}')
    await state.finish()


@dp.message_handler(state=FormGPT)
async def enter_volume(message: types.Message, state: FSMContext):
    answer = message.text
    if answer == '–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å ChatGPT':
        await message.answer('–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.', reply_markup=keyboard)
        await state.finish()
        return
    completion = client.chat.completions.create(model="gpt-3.5-turbo",
    messages=[{"role": "user", "content": answer}])
    await message.answer(completion.choices[0].message.content)
    await FormGPT.zapros.set()


@dp.message_handler(content_types=types.ContentType.PHOTO)
async def handle_photo(message: types.Message):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    photo = message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º—É—é –ø–æ—Å–ª–µ–¥–Ω—é—é (—Å–∞–º—É—é –±–æ–ª—å—à—É—é) —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
    file_id = photo.file_id

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –æ–±—Ä–∞—Ç–Ω–æ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    await bot.send_photo(message.chat.id, file_id, caption="–í–æ—Ç –≤–∞—à–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è! –õ—é–±—É–π—Ç–µ—Å—å –µ–π —Ç–∞–∫–∂–µ, –∫–∞–∫ –≤—ã –º–æ–∂–µ—Ç–µ "
                                                           "–ª—é–±–æ–≤–∞—Ç—å—Å—è –Ω–∞—à–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏, —Å–¥–µ–ª–∞–Ω–Ω—ã–º–∏ –¥–ª—è –≤–∞—Å! –° "
                                                           "—É–≤–∞–∂–µ–Ω–∏–µ–º, ChatBotManagers")


@dp.message_handler()
async def cmd_test1(message: types.Message):
    db_sess = db_session.create_session()
    if message.chat.id == -1001722492789:
        if '/close_ticket' in message.text:
            mess = message.text.replace('/close_ticket ', '')
            if int(mess) in open_tickets:
                del open_tickets[open_tickets.index(int(mess))]
                await message.answer(f'–¢–∏–∫–µ—Ç {mess} –±—ã–ª –∑–∞–∫—Ä—ã—Ç')
                await bot.send_message(int(mess), f'–í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç!', reply_markup=keyboard)
            else:
                await message.answer('–¢–∏–∫–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
        elif '/answer' in message.text:
            mess = message.text.replace('/answer ', '').split(" ", 1)
            if int(mess[0]) in open_tickets:
                await bot.send_message(int(mess[0]), mess[1])
            else:
                await message.answer('–¢–∏–∫–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!')
        elif '/admin' in message.text:
            await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.\n\n–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å?')
    else:
        if message.text == '–û—Ç–º–µ–Ω–∏—Ç—å‚ùå' and message.chat.id in open_tickets:
            user = db_sess.query(User).filter(User.tg_id == message.from_user.id).first()
            user.count_of_used_b += 1
            db_sess.commit()
            del open_tickets[open_tickets.index(message.chat.id)]
            await message.answer('–í–∞—à —Ç–∏–∫–µ—Ç –±—ã–ª –∑–∞–∫—Ä—ã—Ç!', reply_markup=keyboard)
            await bot.send_message(-1001722492789, f'–¢–∏–∫–µ—Ç {message.chat.id} –±—ã–ª –∑–∞–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!')
        elif message.chat.id in open_tickets:
            await bot.send_message(-1001722492789, f"Ticket - {message.chat.id}\n\n{message.text}")
        elif message.text == '–û –∫–æ–º–ø–∞–Ω–∏–∏ üè¢':
            user = db_sess.query(User).filter(User.tg_id == message.from_user.id).first()
            user.count_of_used_b += 1
            db_sess.commit()
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer(
                "ChatBotsManagers ‚Äî –≤–µ–¥—É—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è –≤ –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ web-–ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —á–∞—Ç-–±–æ—Ç–æ–≤, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—á–µ—Ç–∞–µ—Ç "
                "–≤ —Å–µ–±–µ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ —Å –≥–ª—É–±–æ–∫–∏–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∫–ª–∏–µ–Ω—Ç–æ–≤. –ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ —Ç–æ–º—É, "
                "—á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –Ω–∞—à –ø—Ä–æ–µ–∫—Ç –±—ã–ª —É–Ω–∏–∫–∞–ª—å–Ω—ã–º, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –Ω–∞—à–∏—Ö "
                "–∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n–ù–∞—à–∞ –ú–∏—Å—Å–∏—è:\n\n–ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ —Ç–æ–º—É, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏ "
                "–¥–ª—è –∫–∞–∂–¥–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞. –ù–∞—à–∞ –º–∏—Å—Å–∏—è - —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, "
                "–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –Ω–∞—à–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º —É–ª—É—á—à–∞—Ç—å —Å–≤–æ–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—Ç—å –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å "
                "–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n–ù–∞—à–∏ –£—Å–ª—É–≥–∏:\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Web-–ø—Ä–æ–¥—É–∫—Ç–æ–≤: –ú—ã —Å–æ–∑–¥–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ, "
                "–æ—Ç–∑—ã–≤—á–∏–≤—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º –∏ —Ü–µ–ª—è–º –Ω–∞—à–∏—Ö "
                "–∫–ª–∏–µ–Ω—Ç–æ–≤.\n\n–ß–∞—Ç-–±–æ—Ç—ã: –ù–∞—à–∏ —á–∞—Ç-–±–æ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ —Å–ø–æ—Å–æ–±–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å "
                "–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—é —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏, —É–ª—É—á—à–∞—è —Å–µ—Ä–≤–∏—Å –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã.\n\n–ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –∏ –ü–æ–¥–¥–µ—Ä–∂–∫–∞: "
                "–ú—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞, –Ω–∞—á–∏–Ω–∞—è —Å –∞–Ω–∞–ª–∏–∑–∞ "
                "–ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ–º –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≥–æ—Ç–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞.\n\n–ù–∞—à –ü–æ–¥—Ö–æ–¥:\n\n–ú—ã —Ü–µ–Ω–∏–º "
                "–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –ø—Ä–æ–µ–∫—Ç—É –∏ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É. –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –æ–ø—ã—Ç–Ω—ã—Ö "
                "—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤, –≥–æ—Ç–æ–≤—ã—Ö —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–∞–∂–µ —Å–∞–º—ã–µ –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–µ –∏–¥–µ–∏. –ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é –∏ "
                "–æ–±–Ω–æ–≤–ª–µ–Ω–∏—é –Ω–∞—à–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏ –∑–Ω–∞–Ω–∏–π, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç—Ä–µ–Ω–¥–æ–≤ –∏ –ª—É—á—à–∏—Ö "
                "–ø—Ä–∞–∫—Ç–∏–∫ –≤ –æ–±–ª–∞—Å—Ç–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.\n\n–ü–æ—á–µ–º—É ChatBotsManagers:\n\n–û–ø—ã—Ç: –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –∏–º–µ–µ—Ç –±–æ–≥–∞—Ç—ã–π –æ–ø—ã—Ç –≤ "
                "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö web-–ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —á–∞—Ç-–±–æ—Ç–æ–≤.\n\n–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ü–æ–¥—Ö–æ–¥: –ú—ã —É—á–∏—Ç—ã–≤–∞–µ–º "
                "—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∏—Ö —Ü–µ–ª—è–º –∏ "
                "–∑–∞–¥–∞—á–∞–º.\n\n–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –∏ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: –ú—ã —Å–ª–µ–¥–∏–º –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–º–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º "
                "–ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ –Ω–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö.\n\n–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ ChatBotsManagers —Å–µ–≥–æ–¥–Ω—è, "
                "–∏ –¥–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –ø—Ä–æ–¥—É–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—Ç –≤–∞—à –±–∏–∑–Ω–µ—Å –∫ –ª—É—á—à–µ–º—É!")
            await bot.send_photo(chat_id=message.chat.id, photo=get_map(), caption="–ù–∞—à –æ—Ñ–∏—Å –Ω–∞ –ö–∞—Ä—Ç–µ!")
        elif message.text == '–ö–æ–º–∞–Ω–¥–∞üë®‚Äçüë¶‚Äçüë¶':
            user = db_sess.query(User).filter(User.tg_id == message.from_user.id).first()
            user.count_of_used_b += 1
            db_sess.commit()
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer('–ï–≥–æ—Ä –ú–∞–ª–∏–∫–æ–≤ - –ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, —É–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å Python, —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞–º–∏ Flask. –ù–∞–ª–∏—á–∏–µ '
                                 '—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç–∏, –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤, –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è –∏ '
                                 '—Å—Ç—Ä–µ–º–ª–µ–Ω–∏—è –∫ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—Å—Ç–≤—É.\n"–£—Å–∏–¥—á–∏–≤–æ—Å—Ç—å –∏ –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å - –æ–¥–Ω–∏ –∏–∑ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö '
                                 '–∫–∞—á–µ—Å—Ç–≤ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞"\n\n–ï–≥–æ—Ä –ú–∞—Ä–∫–∞—á–µ–≤ - –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç, FullStack-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫. '
                                 '–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å Django, Flask, SQlite, PostgreSQL. –û–≥—Ä–æ–º–Ω—ã–π –æ–ø—ã—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ '
                                 'WEB-–ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —á–∞—Ç-–±–æ—Ç–æ–≤.\n"–ù–∏–∫–æ–≥–¥–∞ –Ω–µ–ª—å–∑—è –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –Ω–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–æ–º, '
                                 '–Ω—É–∂–Ω–æ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É!"')
        elif message.text == '–°—Ç–æ–∏–º–æ—Å—Ç—å üíµ':
            user = db_sess.query(User).filter(User.tg_id == message.from_user.id).first()
            user.count_of_used_b += 1
            db_sess.commit()
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer(
                "–¶–µ–Ω–∞ –Ω–∞ –≥–æ—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è."
                "\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤ - –æ—Ç 50.00‚ÇΩ\n\nSEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è - –æ—Ç 50.00‚ÇΩ\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±–æ—Ç–∞ - –æ—Ç "
                "10.000‚ÇΩ\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ "
                "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –¥–æ–ø–æ–ª–Ω–µ–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - –æ—Ç 100.00‚ÇΩ\n\n–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è "
                "–≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ - –æ—Ç 100.00‚ÇΩ\n\n–ü—Ä–∏–∫–ª–∞–¥–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –∏ –∏—Ö "
                "–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π - –æ—Ç 300.00‚ÇΩ")
        elif message.text == '–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ üíº':
            user = db_sess.query(User).filter(User.tg_id == message.from_user.id).first()
            user.count_of_used_b += 1
            db_sess.commit()
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer('–°–Ω–∏–∑—É –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –Ω–∞—à–∏ –∫—Ä—É–ø–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∂–¥—ã–π –∏–∑ –Ω–∏—Ö –∏ '
                                 '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω—ã –Ω–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã –∏ –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ –Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç '
                                 '—Å–≤–æ—é —Ä–∞–±–æ—Ç—É!', reply_markup=portfolio)
        elif message.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º üë©‚Äçüíº':
            user = db_sess.query(User).filter(User.tg_id == message.from_user.id).first()
            user.count_of_used_b += 1
            db_sess.commit()
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer(
                '–ú–µ–Ω–µ–¥–∂–µ—Ä, –æ—Å–≤–æ–±–æ–¥–∏–≤—à–∏–π—Å—è –≤ –±–ª–∏–∑–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∏—Ç –í–∞–º. –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º.',
                reply_markup=ReplyKeyboardMarkup().add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå'))
            open_tickets.append(message.chat.id)
            await bot.send_message(-1001722492789,
                                   f'–û—Ç–∫—Ä—ã—Ç –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç!\n\n–ù–æ–º–µ—Ä: {message.chat.id}\n\n–î–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞ –Ω–∞–ø–∏—à–∏—Ç–µ:\n/close_ticket {message.chat.id}\n–î–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - /answer {message.chat.id}')
        elif message.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å üìû':
            user = db_sess.query(User).filter(User.tg_id == message.from_user.id).first()
            user.count_of_r += 1

            req = Request()
            user.requests.append(req)
            
            db_sess.commit()
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥.')
                return
            await message.answer('–£–∫–∞–∂–∏—Ç–µ —Å–ø–æ—Å–æ–±, –∫–∞–∫ —Å –í–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è (–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, ID Telegram –∏ —Ç.–¥.).',
                                 reply_markup=ReplyKeyboardMarkup().add('–û—Ç–º–µ–Ω–∏—Ç—å‚ùå'))
            await FormObratSvyaz.sposob.set()
        elif message.text == '–û–±—Ä–∞—Ç–∏—Ç—Å—è –∫ ChatGPT':
            user = db_sess.query(User).filter(User.tg_id == message.from_user.id).first()
            user.count_of_used_b += 1
            db_sess.commit()
            if 'group' in message.chat.type:
                await message.answer('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–∞—Ç —Å –±–æ—Ç–æ–º, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥. @AlViRityGPT_bot')
                return
            await message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –∫ ChatGPT',
                                 reply_markup=ReplyKeyboardMarkup().add('–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å ChatGPT'))
            await FormGPT.zapros.set()
        else:
            if message.chat.type == 'private':
                prompt = f'–ü—Ä–µ–¥—Å—Ç–∞–≤—å, ' \
                         f'—á—Ç–æ —Ç—ã —á–∞—Ç-–±–æ—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ WEB-—Å–∞–π—Ç–æ–≤, –±–æ—Ç–æ–≤, AR/VR –∏ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, ' \
                         f'–∞ —Ç–∞–∫–∂–µ ' \
                         f'–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π! ' \
                         f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å' \
                         f'–∞–ª —Ç–µ–±–µ: {message.text}, –æ—Ç–≤–µ—Ç—å –µ–º—É –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.'
                completion = client.chat.completions.create(model="gpt-3.5-turbo",
                messages=[{"role": "user", "content": prompt}])
                await message.answer('–û—Ç–≤–µ—Ç –ù–µ–π—Ä–æ—Å–µ—Ç–∏:')
                await message.answer(completion.choices[0].message.content)
                await message.answer('–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ.',
                                     reply_markup=keyboard)


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    db_session.global_init("db/db.sqlite")
    executor.start_polling(dp, skip_updates=True)

